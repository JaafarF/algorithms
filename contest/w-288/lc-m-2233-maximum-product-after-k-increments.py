from heapq import heapify, heappop, heappush
from typing import List


class Solution:
    # my correct greedy solution - got TLE during contest because I only modulod at the end
    def maximumProduct(self, nums: List[int], k: int) -> int:
        heapify(nums)

        for _ in range(k):
            a = heappop(nums)
            heappush(nums, a + 1)

        prod = 1
        for num in nums:
            prod = (prod * num) % (10 ** 9 + 7)

        return prod


solution = Solution()
assert solution.maximumProduct([0, 4], 5) == 20
assert solution.maximumProduct([6, 3, 3, 2], 2) == 216
assert solution.maximumProduct([24, 5, 64, 53, 26, 38], 54) == 180820950
assert solution.maximumProduct
